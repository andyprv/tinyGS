[{"id":"ef4faec2.3efa9","type":"tab","label":"Sat - Sub TLE","disabled":false,"info":""},{"id":"113adef8.4f5ce1","type":"tle","z":"ef4faec2.3efa9","satid":"","tle1":"","tle2":"","coordsys":"latlongdeg","name":"","x":1030,"y":160,"wires":[["848eb8f6.72e138"]]},{"id":"848eb8f6.72e138","type":"link out","z":"ef4faec2.3efa9","name":"Sat - Sub TLE 1 >> OUT","links":["f3bf307.4a84cd"],"x":1175,"y":300,"wires":[]},{"id":"5edf7997.77cb58","type":"switch","z":"ef4faec2.3efa9","name":"switch by msg.index","property":"index","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"num"},{"t":"eq","v":"1","vt":"num"},{"t":"eq","v":"2","vt":"num"},{"t":"eq","v":"3","vt":"num"},{"t":"eq","v":"4","vt":"num"},{"t":"eq","v":"5","vt":"num"},{"t":"eq","v":"6","vt":"num"},{"t":"eq","v":"7","vt":"num"},{"t":"eq","v":"8","vt":"str"},{"t":"eq","v":"9","vt":"str"},{"t":"eq","v":"10","vt":"str"},{"t":"eq","v":"11","vt":"str"},{"t":"eq","v":"12","vt":"str"},{"t":"eq","v":"13","vt":"str"},{"t":"eq","v":"14","vt":"str"},{"t":"eq","v":"15","vt":"str"}],"checkall":"false","repair":false,"outputs":16,"x":380,"y":660,"wires":[["9a2b6d13.147c4"],["9330cbed.890e08"],["61125a5d.f3b004"],["80df3f5.56289c"],["634e9015.3ecbd"],["dd5bd0b1.2c879"],["85785b9a.bd0ee8"],["a73857.2ecc57a8"],["661aec7d.0c7bf4"],["aa50fbe1.f4e288"],["a9b16c1d.4c2ee"],["32837050.71445"],["dd0b1ad7.a7ce28"],["f205a83b.296528"],["c85983e4.50357"],["59c951fc.6cee8"]]},{"id":"ad9876ef.e61ce8","type":"tle","z":"ef4faec2.3efa9","satid":"","tle1":"","tle2":"","coordsys":"latlongdeg","name":"","x":1030,"y":200,"wires":[["848eb8f6.72e138"]]},{"id":"382e8b97.9bcc34","type":"tle","z":"ef4faec2.3efa9","satid":"","tle1":"","tle2":"","coordsys":"latlongdeg","name":"","x":1030,"y":240,"wires":[["848eb8f6.72e138"]]},{"id":"9298ea0e.ca2258","type":"tle","z":"ef4faec2.3efa9","satid":"","tle1":"","tle2":"","coordsys":"latlongdeg","name":"","x":1030,"y":280,"wires":[["848eb8f6.72e138"]]},{"id":"fd28f0af.405fa","type":"tle","z":"ef4faec2.3efa9","satid":"","tle1":"","tle2":"","coordsys":"latlongdeg","name":"","x":1030,"y":380,"wires":[["848eb8f6.72e138"]]},{"id":"f4c9bb36.fe6328","type":"tle","z":"ef4faec2.3efa9","satid":"","tle1":"","tle2":"","coordsys":"latlongdeg","name":"","x":1030,"y":420,"wires":[["848eb8f6.72e138"]]},{"id":"87afff1d.15b09","type":"tle","z":"ef4faec2.3efa9","satid":"","tle1":"","tle2":"","coordsys":"latlongdeg","name":"","x":1030,"y":460,"wires":[["848eb8f6.72e138"]]},{"id":"559b8a4e.a65454","type":"tle","z":"ef4faec2.3efa9","satid":"","tle1":"","tle2":"","coordsys":"latlongdeg","name":"","x":1030,"y":500,"wires":[["848eb8f6.72e138"]]},{"id":"9a2b6d13.147c4","type":"function","z":"ef4faec2.3efa9","name":"Count - TLE","func":"// initialise the counter to 0 if it doesn't exist already\nvar count = context.get('count')||0;\ncount += 1;\n// store the value back\ncontext.set('count',count);\n\n// get satid\nnewS1 = msg.satid;\n\n// this.status({fill:\"red\",shape:\"ring\",text:\"counter: \"});\n//node.status({fill:\"red\",shape:\"ring\",text:\"disconnected\"});\n//node.status({fill:\"green\",shape:\"dot\",text:\"connected\"});\n//node.status({text:\"Just text status\"});\n//node.status({});   // to clear the status\n\n// save tcp reveive counter ...\n//context.global.tcp_rcv_cnt = count;\n\n// make it part of the outgoing msg object\n//msg.count = count;\n\n// show count\nnode.status({fill:\"blue\",shape:\"dot\",text:\"count: \" + count +\" , \" +newS1});\n\nreturn msg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":630,"y":120,"wires":[["113adef8.4f5ce1","a6f3aba3.81f418"]]},{"id":"6c0323b8.6e15ac","type":"comment","z":"ef4faec2.3efa9","name":"Sat - Sub TLE","info":"worldmap\n\ngroundstation \nlat  48.78 / lon 11.53 / alt 433\n\n","x":90,"y":40,"wires":[]},{"id":"25d0fd16.ddcbb2","type":"tle","z":"ef4faec2.3efa9","satid":"","tle1":"","tle2":"","coordsys":"latlongdeg","name":"","x":1030,"y":700,"wires":[["3b2081fd.85309e"]]},{"id":"3b2081fd.85309e","type":"link out","z":"ef4faec2.3efa9","name":"Sat - Sub TLE 2 >> OUT","links":["f3bf307.4a84cd"],"x":1175,"y":820,"wires":[]},{"id":"2d49e268.45da0e","type":"tle","z":"ef4faec2.3efa9","satid":"","tle1":"","tle2":"","coordsys":"latlongdeg","name":"","x":1030,"y":740,"wires":[["3b2081fd.85309e"]]},{"id":"5c860496.82525c","type":"tle","z":"ef4faec2.3efa9","satid":"","tle1":"","tle2":"","coordsys":"latlongdeg","name":"","x":1030,"y":780,"wires":[["3b2081fd.85309e"]]},{"id":"90a9a3c3.3c51e","type":"tle","z":"ef4faec2.3efa9","satid":"","tle1":"","tle2":"","coordsys":"latlongdeg","name":"","x":1030,"y":820,"wires":[["3b2081fd.85309e"]]},{"id":"21e27ddc.7996f2","type":"tle","z":"ef4faec2.3efa9","satid":"","tle1":"","tle2":"","coordsys":"latlongdeg","name":"","x":1030,"y":940,"wires":[["3b2081fd.85309e"]]},{"id":"14fae54c.4dcd0b","type":"tle","z":"ef4faec2.3efa9","satid":"","tle1":"","tle2":"","coordsys":"latlongdeg","name":"","x":1030,"y":980,"wires":[["3b2081fd.85309e"]]},{"id":"fdca4791.a7c0c8","type":"tle","z":"ef4faec2.3efa9","satid":"","tle1":"","tle2":"","coordsys":"latlongdeg","name":"","x":1030,"y":1020,"wires":[["3b2081fd.85309e"]]},{"id":"2ecf2790.d114b8","type":"tle","z":"ef4faec2.3efa9","satid":"","tle1":"","tle2":"","coordsys":"latlongdeg","name":"","x":1030,"y":1060,"wires":[["3b2081fd.85309e"]]},{"id":"6e2dae5.be03c5","type":"link in","z":"ef4faec2.3efa9","name":"IN >> Sat - Sub TLE","links":["710ea20e.9c4a1c"],"x":235,"y":400,"wires":[["5edf7997.77cb58","ba99879a.d24db8"]]},{"id":"a6f3aba3.81f418","type":"debug","z":"ef4faec2.3efa9","name":"Sat - Sub TLE Debug; ","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":840,"y":60,"wires":[]},{"id":"9330cbed.890e08","type":"function","z":"ef4faec2.3efa9","name":"Count - TLE","func":"// initialise the counter to 0 if it doesn't exist already\nvar count = context.get('count')||0;\ncount += 1;\n// store the value back\ncontext.set('count',count);\n\n// get satid\nnewS1 = msg.satid;\n\n// this.status({fill:\"red\",shape:\"ring\",text:\"counter: \"});\n//node.status({fill:\"red\",shape:\"ring\",text:\"disconnected\"});\n//node.status({fill:\"green\",shape:\"dot\",text:\"connected\"});\n//node.status({text:\"Just text status\"});\n//node.status({});   // to clear the status\n\n// save tcp reveive counter ...\n//context.global.tcp_rcv_cnt = count;\n\n// make it part of the outgoing msg object\n//msg.count = count;\n\n// show count\nnode.status({fill:\"blue\",shape:\"dot\",text:\"count: \" + count +\" , \" +newS1});\n\nreturn msg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":630,"y":180,"wires":[["ad9876ef.e61ce8"]]},{"id":"61125a5d.f3b004","type":"function","z":"ef4faec2.3efa9","name":"Count - TLE","func":"// initialise the counter to 0 if it doesn't exist already\nvar count = context.get('count')||0;\ncount += 1;\n// store the value back\ncontext.set('count',count);\n\n// get satid\nnewS1 = msg.satid;\n\n// this.status({fill:\"red\",shape:\"ring\",text:\"counter: \"});\n//node.status({fill:\"red\",shape:\"ring\",text:\"disconnected\"});\n//node.status({fill:\"green\",shape:\"dot\",text:\"connected\"});\n//node.status({text:\"Just text status\"});\n//node.status({});   // to clear the status\n\n// save tcp reveive counter ...\n//context.global.tcp_rcv_cnt = count;\n\n// make it part of the outgoing msg object\n//msg.count = count;\n\n// show count\nnode.status({fill:\"blue\",shape:\"dot\",text:\"count: \" + count +\" , \" +newS1});\n\nreturn msg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":630,"y":240,"wires":[["382e8b97.9bcc34"]]},{"id":"80df3f5.56289c","type":"function","z":"ef4faec2.3efa9","name":"Count - TLE","func":"// initialise the counter to 0 if it doesn't exist already\nvar count = context.get('count')||0;\ncount += 1;\n// store the value back\ncontext.set('count',count);\n\n// get satid\nnewS1 = msg.satid;\n\n// this.status({fill:\"red\",shape:\"ring\",text:\"counter: \"});\n//node.status({fill:\"red\",shape:\"ring\",text:\"disconnected\"});\n//node.status({fill:\"green\",shape:\"dot\",text:\"connected\"});\n//node.status({text:\"Just text status\"});\n//node.status({});   // to clear the status\n\n// save tcp reveive counter ...\n//context.global.tcp_rcv_cnt = count;\n\n// make it part of the outgoing msg object\n//msg.count = count;\n\n// show count\nnode.status({fill:\"blue\",shape:\"dot\",text:\"count: \" + count +\" , \" +newS1});\n\nreturn msg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":630,"y":300,"wires":[["9298ea0e.ca2258"]]},{"id":"634e9015.3ecbd","type":"function","z":"ef4faec2.3efa9","name":"Count - TLE","func":"// initialise the counter to 0 if it doesn't exist already\nvar count = context.get('count')||0;\ncount += 1;\n// store the value back\ncontext.set('count',count);\n\n// get satid\nnewS1 = msg.satid;\n\n// this.status({fill:\"red\",shape:\"ring\",text:\"counter: \"});\n//node.status({fill:\"red\",shape:\"ring\",text:\"disconnected\"});\n//node.status({fill:\"green\",shape:\"dot\",text:\"connected\"});\n//node.status({text:\"Just text status\"});\n//node.status({});   // to clear the status\n\n// save tcp reveive counter ...\n//context.global.tcp_rcv_cnt = count;\n\n// make it part of the outgoing msg object\n//msg.count = count;\n\n// show count\nnode.status({fill:\"blue\",shape:\"dot\",text:\"count: \" + count +\" , \" +newS1});\n\nreturn msg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":630,"y":360,"wires":[["fd28f0af.405fa"]]},{"id":"a73857.2ecc57a8","type":"function","z":"ef4faec2.3efa9","name":"Count - TLE","func":"// initialise the counter to 0 if it doesn't exist already\nvar count = context.get('count')||0;\ncount += 1;\n// store the value back\ncontext.set('count',count);\n\n// get satid\nnewS1 = msg.satid;\n\n// this.status({fill:\"red\",shape:\"ring\",text:\"counter: \"});\n//node.status({fill:\"red\",shape:\"ring\",text:\"disconnected\"});\n//node.status({fill:\"green\",shape:\"dot\",text:\"connected\"});\n//node.status({text:\"Just text status\"});\n//node.status({});   // to clear the status\n\n// save tcp reveive counter ...\n//context.global.tcp_rcv_cnt = count;\n\n// make it part of the outgoing msg object\n//msg.count = count;\n\n// show count\nnode.status({fill:\"blue\",shape:\"dot\",text:\"count: \" + count +\" , \" +newS1});\n\nreturn msg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":630,"y":540,"wires":[["559b8a4e.a65454"]]},{"id":"85785b9a.bd0ee8","type":"function","z":"ef4faec2.3efa9","name":"Count - TLE","func":"// initialise the counter to 0 if it doesn't exist already\nvar count = context.get('count')||0;\ncount += 1;\n// store the value back\ncontext.set('count',count);\n\n// get satid\nnewS1 = msg.satid;\n\n// this.status({fill:\"red\",shape:\"ring\",text:\"counter: \"});\n//node.status({fill:\"red\",shape:\"ring\",text:\"disconnected\"});\n//node.status({fill:\"green\",shape:\"dot\",text:\"connected\"});\n//node.status({text:\"Just text status\"});\n//node.status({});   // to clear the status\n\n// save tcp reveive counter ...\n//context.global.tcp_rcv_cnt = count;\n\n// make it part of the outgoing msg object\n//msg.count = count;\n\n// show count\nnode.status({fill:\"blue\",shape:\"dot\",text:\"count: \" + count +\" , \" +newS1});\n\nreturn msg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":630,"y":480,"wires":[["87afff1d.15b09"]]},{"id":"dd5bd0b1.2c879","type":"function","z":"ef4faec2.3efa9","name":"Count - TLE","func":"// initialise the counter to 0 if it doesn't exist already\nvar count = context.get('count')||0;\ncount += 1;\n// store the value back\ncontext.set('count',count);\n\n// get satid\nnewS1 = msg.satid;\n\n// this.status({fill:\"red\",shape:\"ring\",text:\"counter: \"});\n//node.status({fill:\"red\",shape:\"ring\",text:\"disconnected\"});\n//node.status({fill:\"green\",shape:\"dot\",text:\"connected\"});\n//node.status({text:\"Just text status\"});\n//node.status({});   // to clear the status\n\n// save tcp reveive counter ...\n//context.global.tcp_rcv_cnt = count;\n\n// make it part of the outgoing msg object\n//msg.count = count;\n\n// show count\nnode.status({fill:\"blue\",shape:\"dot\",text:\"count: \" + count +\" , \" +newS1});\n\nreturn msg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":630,"y":420,"wires":[["f4c9bb36.fe6328"]]},{"id":"661aec7d.0c7bf4","type":"function","z":"ef4faec2.3efa9","name":"Count - TLE","func":"// initialise the counter to 0 if it doesn't exist already\nvar count = context.get('count')||0;\ncount += 1;\n// store the value back\ncontext.set('count',count);\n\n// get satid\nnewS1 = msg.satid;\n\n// this.status({fill:\"red\",shape:\"ring\",text:\"counter: \"});\n//node.status({fill:\"red\",shape:\"ring\",text:\"disconnected\"});\n//node.status({fill:\"green\",shape:\"dot\",text:\"connected\"});\n//node.status({text:\"Just text status\"});\n//node.status({});   // to clear the status\n\n// save tcp reveive counter ...\n//context.global.tcp_rcv_cnt = count;\n\n// make it part of the outgoing msg object\n//msg.count = count;\n\n// show count\nnode.status({fill:\"blue\",shape:\"dot\",text:\"count: \" + count +\" , \" +newS1});\n\nreturn msg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":630,"y":660,"wires":[["25d0fd16.ddcbb2"]]},{"id":"aa50fbe1.f4e288","type":"function","z":"ef4faec2.3efa9","name":"Count - TLE","func":"// initialise the counter to 0 if it doesn't exist already\nvar count = context.get('count')||0;\ncount += 1;\n// store the value back\ncontext.set('count',count);\n\n// get satid\nnewS1 = msg.satid;\n\n// this.status({fill:\"red\",shape:\"ring\",text:\"counter: \"});\n//node.status({fill:\"red\",shape:\"ring\",text:\"disconnected\"});\n//node.status({fill:\"green\",shape:\"dot\",text:\"connected\"});\n//node.status({text:\"Just text status\"});\n//node.status({});   // to clear the status\n\n// save tcp reveive counter ...\n//context.global.tcp_rcv_cnt = count;\n\n// make it part of the outgoing msg object\n//msg.count = count;\n\n// show count\nnode.status({fill:\"blue\",shape:\"dot\",text:\"count: \" + count +\" , \" +newS1});\n\nreturn msg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":630,"y":720,"wires":[["2d49e268.45da0e"]]},{"id":"a9b16c1d.4c2ee","type":"function","z":"ef4faec2.3efa9","name":"Count - TLE","func":"// initialise the counter to 0 if it doesn't exist already\nvar count = context.get('count')||0;\ncount += 1;\n// store the value back\ncontext.set('count',count);\n\n// get satid\nnewS1 = msg.satid;\n\n// this.status({fill:\"red\",shape:\"ring\",text:\"counter: \"});\n//node.status({fill:\"red\",shape:\"ring\",text:\"disconnected\"});\n//node.status({fill:\"green\",shape:\"dot\",text:\"connected\"});\n//node.status({text:\"Just text status\"});\n//node.status({});   // to clear the status\n\n// save tcp reveive counter ...\n//context.global.tcp_rcv_cnt = count;\n\n// make it part of the outgoing msg object\n//msg.count = count;\n\n// show count\nnode.status({fill:\"blue\",shape:\"dot\",text:\"count: \" + count +\" , \" +newS1});\n\nreturn msg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":630,"y":780,"wires":[["5c860496.82525c"]]},{"id":"59c951fc.6cee8","type":"function","z":"ef4faec2.3efa9","name":"Count - TLE","func":"// initialise the counter to 0 if it doesn't exist already\nvar count = context.get('count')||0;\ncount += 1;\n// store the value back\ncontext.set('count',count);\n\n// get satid\nnewS1 = msg.satid;\n\n// this.status({fill:\"red\",shape:\"ring\",text:\"counter: \"});\n//node.status({fill:\"red\",shape:\"ring\",text:\"disconnected\"});\n//node.status({fill:\"green\",shape:\"dot\",text:\"connected\"});\n//node.status({text:\"Just text status\"});\n//node.status({});   // to clear the status\n\n// save tcp reveive counter ...\n//context.global.tcp_rcv_cnt = count;\n\n// make it part of the outgoing msg object\n//msg.count = count;\n\n// show count\nnode.status({fill:\"blue\",shape:\"dot\",text:\"count: \" + count +\" , \" +newS1});\n\nreturn msg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":630,"y":1080,"wires":[["2ecf2790.d114b8"]]},{"id":"c85983e4.50357","type":"function","z":"ef4faec2.3efa9","name":"Count - TLE","func":"// initialise the counter to 0 if it doesn't exist already\nvar count = context.get('count')||0;\ncount += 1;\n// store the value back\ncontext.set('count',count);\n\n// get satid\nnewS1 = msg.satid;\n\n// this.status({fill:\"red\",shape:\"ring\",text:\"counter: \"});\n//node.status({fill:\"red\",shape:\"ring\",text:\"disconnected\"});\n//node.status({fill:\"green\",shape:\"dot\",text:\"connected\"});\n//node.status({text:\"Just text status\"});\n//node.status({});   // to clear the status\n\n// save tcp reveive counter ...\n//context.global.tcp_rcv_cnt = count;\n\n// make it part of the outgoing msg object\n//msg.count = count;\n\n// show count\nnode.status({fill:\"blue\",shape:\"dot\",text:\"count: \" + count +\" , \" +newS1});\n\nreturn msg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":630,"y":1020,"wires":[["fdca4791.a7c0c8"]]},{"id":"dd0b1ad7.a7ce28","type":"function","z":"ef4faec2.3efa9","name":"Count - TLE","func":"// initialise the counter to 0 if it doesn't exist already\nvar count = context.get('count')||0;\ncount += 1;\n// store the value back\ncontext.set('count',count);\n\n// get satid\nnewS1 = msg.satid;\n\n// this.status({fill:\"red\",shape:\"ring\",text:\"counter: \"});\n//node.status({fill:\"red\",shape:\"ring\",text:\"disconnected\"});\n//node.status({fill:\"green\",shape:\"dot\",text:\"connected\"});\n//node.status({text:\"Just text status\"});\n//node.status({});   // to clear the status\n\n// save tcp reveive counter ...\n//context.global.tcp_rcv_cnt = count;\n\n// make it part of the outgoing msg object\n//msg.count = count;\n\n// show count\nnode.status({fill:\"blue\",shape:\"dot\",text:\"count: \" + count +\" , \" +newS1});\n\nreturn msg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":630,"y":900,"wires":[["21e27ddc.7996f2"]]},{"id":"32837050.71445","type":"function","z":"ef4faec2.3efa9","name":"Count - TLE","func":"// initialise the counter to 0 if it doesn't exist already\nvar count = context.get('count')||0;\ncount += 1;\n// store the value back\ncontext.set('count',count);\n\n// get satid\nnewS1 = msg.satid;\n\n// this.status({fill:\"red\",shape:\"ring\",text:\"counter: \"});\n//node.status({fill:\"red\",shape:\"ring\",text:\"disconnected\"});\n//node.status({fill:\"green\",shape:\"dot\",text:\"connected\"});\n//node.status({text:\"Just text status\"});\n//node.status({});   // to clear the status\n\n// save tcp reveive counter ...\n//context.global.tcp_rcv_cnt = count;\n\n// make it part of the outgoing msg object\n//msg.count = count;\n\n// show count\nnode.status({fill:\"blue\",shape:\"dot\",text:\"count: \" + count +\" , \" +newS1});\n\nreturn msg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":630,"y":840,"wires":[["90a9a3c3.3c51e"]]},{"id":"f205a83b.296528","type":"function","z":"ef4faec2.3efa9","name":"Count - TLE","func":"// initialise the counter to 0 if it doesn't exist already\nvar count = context.get('count')||0;\ncount += 1;\n// store the value back\ncontext.set('count',count);\n\n// get satid\nnewS1 = msg.satid;\n\n// this.status({fill:\"red\",shape:\"ring\",text:\"counter: \"});\n//node.status({fill:\"red\",shape:\"ring\",text:\"disconnected\"});\n//node.status({fill:\"green\",shape:\"dot\",text:\"connected\"});\n//node.status({text:\"Just text status\"});\n//node.status({});   // to clear the status\n\n// save tcp reveive counter ...\n//context.global.tcp_rcv_cnt = count;\n\n// make it part of the outgoing msg object\n//msg.count = count;\n\n// show count\nnode.status({fill:\"blue\",shape:\"dot\",text:\"count: \" + count +\" , \" +newS1});\n\nreturn msg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":630,"y":960,"wires":[["14fae54c.4dcd0b"]]},{"id":"ba99879a.d24db8","type":"function","z":"ef4faec2.3efa9","name":"Counter","func":"// initialise the counter to 0 if it doesn't exist already\nvar count = context.get('count')||0;\ncount += 1;\n// store the value back\ncontext.set('count',count);\n\n// this.status({fill:\"red\",shape:\"ring\",text:\"counter: \"});\n//node.status({fill:\"red\",shape:\"ring\",text:\"disconnected\"});\n//node.status({fill:\"green\",shape:\"dot\",text:\"connected\"});\n//node.status({text:\"Just text status\"});\n//node.status({});   // to clear the status\n\n// save tcp reveive counter ...\n//context.global.tcp_rcv_cnt = count;\n\n// make it part of the outgoing msg object\n//msg.count = count;\n\n// show count\nnode.status({fill:\"blue\",shape:\"dot\",text:\"count: \" + count});\n\nreturn msg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":360,"y":280,"wires":[[]]}]